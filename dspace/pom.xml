<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.dspace</groupId>
    <artifactId>dspace</artifactId>
    <name>DSpace :: Assembly and Configuration</name>
    <packaging>pom</packaging>
    <description>
        The DSpace Project provides all the functionality required to
        build, install and upgrade and dspace instance.
    </description>
    <url>http://projects.dspace.org/dspace</url>
    <!-- 
        A Parent POM that Maven inherits DSpace Default 
        POM atrributes from. 
    -->
    <parent>
        <groupId>org.dspace</groupId>
        <artifactId>dspace-pom</artifactId>
        <version>1.5-SNAPSHOT</version>
        <relativePath>../dspace-pom</relativePath>
    </parent>
    
    <profiles>

        <!-- 
            These profiles activate the inclusion of various modules into
            the DSpace Build process. They activate automatically if the
            source module is in the local file system, correctly located
            relative to this file.
        -->

        <!-- 
            Builds central API for DSpace
        -->
        <profile>
            <id>dspace-api</id>
            <activation>
                <file>
                    <exists>../dspace-api/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-api</module>
            </modules>
        </profile>

        <!-- 
            Builds OAI Gateway WAR for DSpace
        -->
        <profile>
            <id>oai</id>
            <activation>
                <file>
                    <exists>../dspace-oai/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-oai</module>
            </modules>
        </profile>

        <!-- 
            Builds JSPUI WAR for DSpace
        -->
        <profile>

            <id>jspui</id>
            <activation>
                <file>
                    <exists>../dspace-jspui/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-jspui</module>
            </modules>
        </profile>

        <!-- 
            Builds XMLUI WAR for DSpace
        -->
        <profile>
            <id>xmlui</id>
            <activation>
                <file>
                    <exists>../dspace-xmlui/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-xmlui</module>
            </modules>
        </profile>

        <!-- 
            Builds each separate XMLUI module for the XMLUI war (for development/Eclipse)
        -->
        <profile>
            <id>xmlui-api</id>
            <activation>
                <file>
                    <exists>../dspace-xmlui-api/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-xmlui-api</module>
            </modules>
        </profile>

        <profile>
            <id>xmlui-wing</id>
            <activation>
                <file>
                    <exists>../dspace-xmlui-wing/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-xmlui-wing</module>
            </modules>
        </profile>

        <profile>
            <id>xmlui-webapp</id>
            <activation>
                <file>
                    <exists>../dspace-xmlui-webapp/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-xmlui-webapp</module>
            </modules>
        </profile>


        <profile>
            <!-- 
                Builds LNI WAR for DSpace
            -->
            <id>lni</id>
            <activation>
                <file>
                    <exists>../dspace-lni/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-lni</module>
            </modules>
        </profile>

        <!-- 
            Builds each separate LNI module for the LNI war (for development/Eclipse)
        -->
        <profile>
            <id>lni-core</id>
            <activation>
                <file>
                    <exists>../dspace-lni-core/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-lni-core</module>
            </modules>
        </profile>

        <profile>
            <id>lni-client</id>
            <activation>
                <file>
                    <exists>../dspace-lni-client/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-lni-client</module>
            </modules>
        </profile>

        <profile>
            <id>lni-webapp</id>
            <activation>
                <file>
                    <exists>../dspace-lni-webapp/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../dspace-lni-webapp</module>
            </modules>
        </profile>


        <profile>
            <!-- 
                Builds Language Packs for DSpace
            -->
            <id>language-packs</id>
            <activation>
                <file>
                    <exists>../language-packs/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>../language-packs</module>
            </modules>
        </profile>

        <!-- 
            These profiles setup properties and build configuration
            appropriate to the database that DSpace will be installed
            against.
            
            They are activated by using the profile id - ie. -Ppostgres,
            or defining db.name - ie. -Ddb.name=oracle
        -->
        <!-- 
            Default profile for Postgres database configuration
            Use -Ppostgres to activate.
        -->

        <profile>
            <id>postgres</id>
            <activation>
                <property>
                    <name>!db.name</name>
                </property>
            </activation>
            <properties>
                <db.sql.dir>etc</db.sql.dir>
                <db.name>postgres</db.name>
                <db.driver>org.postgresql.Driver</db.driver>
                <db.url>jdbc:postgresql://localhost:5432/dspace</db.url>
                <db.username>dspace</db.username>
                <db.password>dspace</db.password>
            </properties>
        </profile>

        <!-- 
            Default profile for Oracle database configuration
            Use -Poracle or -Ddb.name=oracle to activate.
        -->
        <profile>
            <id>oracle</id>
            <activation>
                <property>
                    <name>db.name</name>
                    <value>oracle</value>
                </property>
            </activation>
            <properties>
                <db.sql.dir>etc/oracle</db.sql.dir>
                <db.name>oracle</db.name>
                <db.driver>oracle.jdbc.OracleDriver</db.driver>
                <db.url>jdbc:oracle:thin:@//localhost:1521/xe</db.url>
                <db.username>dspace</db.username>
                <db.password>dspace</db.password>
            </properties>
        </profile>


        <!-- 
            Profiles to activate special build processes.
            These are tasks that you would not want to occur
            for every build, but may be required occassionally
            - for example setting up the database schema
        -->
        <!--
            Profile to setup the database schema.
            Use -Psetup-db to activate
        -->
        <profile>
            <id>setup-db</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>setup-db</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>setup-db</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <username>${db.username}</username>
                                    <password>${db.password}</password>
                                    <url>${db.url}</url>
                                    <driver>${db.driver}</driver>
                                    <srcFiles>
                                        <srcFile>
                                            ${db.sql.dir}/database_schema.sql
                                        </srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>load-registries</id>
                                <phase>package</phase>
                                <configuration>
                                    <tasks>
                                        <java
                                            classname="org.dspace.administer.RegistryLoader"
                                            fork="yes"
                                            failonerror="yes">
                                            <classpath>
                                                <fileset
                                                    dir="${project.build.directory}">
                                                    <include
                                                        name="**/*.jar" />
                                                </fileset>
                                            </classpath>
                                            <sysproperty
                                                key="log4j.configuration"
                                                value="config/log4j-console.properties" />
                                            <sysproperty
                                                key="dspace.configuration"
                                                value="${project.build.directory}/${project.build.finalName}.dir/config/dspace.cfg" />
                                            <arg value="-bitstream" />
                                            <arg
                                                value="${project.build.directory}/${project.build.finalName}.dir/config/registries/bitstream-formats.xml" />
                                        </java>
                                        <java
                                            classname="org.dspace.administer.RegistryLoader"
                                            fork="yes"
                                            failonerror="yes">
                                            <classpath>
                                                <fileset
                                                    dir="${project.build.directory}">
                                                    <include
                                                        name="**/*.jar" />
                                                </fileset>
                                            </classpath>
                                            <sysproperty
                                                key="log4j.configuration"
                                                value="config/log4j-console.properties" />
                                            <sysproperty
                                                key="dspace.configuration"
                                                value="${project.build.directory}/${project.build.finalName}.dir/config/dspace.cfg" />
                                            <arg value="-dc" />
                                            <arg
                                                value="${project.build.directory}/${project.build.finalName}.dir/config/registries/dublin-core-types.xml" />
                                        </java>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!--  overall project assembly -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>
                            src/assemble/assembly.xml
                        </descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>