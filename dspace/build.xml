<?xml version="1.0"?>

<!--
  - Copyright (c) 2001, Hewlett-Packard Company and Massachusetts
  - Institute of Technology.  All rights reserved.
  - 
  - Redistribution and use in source and binary forms, with or without
  - modification, are permitted provided that the following conditions are
  - met:
  - 
  - - Redistributions of source code must retain the above copyright
  - notice, this list of conditions and the following disclaimer.
  - 
  - - Redistributions in binary form must reproduce the above copyright
  - notice, this list of conditions and the following disclaimer in the
  - documentation and/or other materials provided with the distribution.
  - 
  - - Neither the name of the Hewlett-Packard Company nor the name of the
  - Massachusetts Institute of Technology nor the names of their
  - contributors may be used to endorse or promote products derived from
  - this software without specific prior written permission.
  - 
  - THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  - ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  - LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  - A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  - HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  - INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  - BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
  - OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  - ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
  - TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
  - USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  - DAMAGE.
  -->

<!--
  - DSpace build file
  -
  - Version:  $Revision$
  - Date:     $Date$
  -->

<project name="DSpace" default="compile" basedir=".">

  <!-- ============================================================= -->
  <!-- Will be using various environment variables                   -->
  <!-- ============================================================= -->

  <property environment="env"/>


  <!-- ============================================================= -->
  <!-- Build parameters that are likely to need tweaking             -->
  <!-- ============================================================= -->
    
  <!-- Default configuration to use.  This may be overridden. -->
  <property name="config" value="${basedir}/config/dspace.cfg" />

  <!-- Give user a chance to override without editing this file 
       (and without typing -D each time s/he compiles it) -->
  <property file="${user.home}/.dspace.properties" />

  <!-- Load the configuration -->
  <property file="${config}" />


  <!-- ============================================================= -->
  <!-- The DSpace class path for building                            -->
  <!-- ============================================================= -->

  <!-- We will include the environment CLASSPATH -->
  <path id="build.class.path">
    <pathelement path="${env.CLASSPATH}"/>
    <pathelement path="${basedir}/build/classes"/>
    <fileset dir="${basedir}/lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  
  <!-- ============================================================= -->
  <!-- Compile the source code                                       -->
  <!-- ============================================================= -->

  <target name="compile"
          description="Compile the source code">
    <mkdir dir="${basedir}/build/classes"/>
    <javac srcdir="${basedir}/src"
           destdir="${basedir}/build/classes"
           debug="on">
       <include name="**/*.java"/>
       <classpath refid="build.class.path"/>
    </javac>
  </target>
  
  
  <!-- ============================================================= -->
  <!-- Update the code, without clobbering existing data             -->
  <!-- ============================================================= -->

  <target name="update"
          description="Update installed code (install without clobbering data)">
    <mkdir dir="${dspace.dir}/bin"/>
    <mkdir dir="${dspace.dir}/lib"/>
    <mkdir dir="${dspace.dir}/jsp/WEB-INF/lib"/>
    <copy todir="${dspace.dir}/bin">
      <fileset dir="bin"/>
    </copy>
    <copy todir="${dspace.dir}/jsp/WEB-INF/lib">
      <fileset dir="lib"/>
    </copy>
    <copy todir="${dspace.dir}/jsp">
      <fileset dir="jsp"/>
    </copy>
    <jar jarfile="${dspace.dir}/jsp/WEB-INF/lib/dspace.jar"
         basedir="${basedir}/build/classes" />
  </target>
  
  
  <!-- ============================================================= -->
  <!-- Do a fresh install of the code and configuration files        -->
  <!-- ============================================================= -->
  
  <!-- Installs code, then config, and symlinks WEB-INF/classes to config -->
  <target name="install_code"
          depends="update"
          description="Do a fresh install of the system, not touching database">
    <mkdir dir="${dspace.dir}/config" />
    <mkdir dir="${assetstore.dir}" />
    <mkdir dir="${history.dir}" />
    <copy todir="${dspace.dir}/config">
      <fileset dir="${basedir}/config"/>
    </copy>
    <exec executable="ln">
      <arg value="-s" />
      <arg value="${dspace.dir}/config" />
      <arg value="${dspace.dir}/jsp/WEB-INF/classes" />
    </exec>
  </target>


  <!-- ============================================================= -->
  <!-- Create the database tables, removing anything already there   -->
  <!-- ============================================================= -->

  <!-- We execute InitializeDatabase, passing in the simple log4j properties
    -  file in etc/ and the DSpace configuration file using system
    -  properties -->
  <target name="setup_database"
          description="Create database tables, removing existing data">
    <java classname="org.dspace.storage.rdbms.InitializeDatabase"
          classpathref="build.class.path"
          fork="yes"
          failonerror="yes">
      <sysproperty key="log4j.configuration" value="file:${basedir}/etc/log4j.build.properties"/>
      <sysproperty key="dspace.configuration" value="${config}"/>
      <arg value="${basedir}/etc/database_schema.sql"/>
    </java>
  </target>
    

  <!-- ============================================================= -->
  <!-- Do a fresh system install                                     -->
  <!-- ============================================================= -->
  
  <target name="fresh_install"
          depends="install_code,setup_database"
          description="Do a fresh install of the system, overwriting any data">
  </target>


  <!-- ============================================================= -->
  <!-- Clean source code                                             -->
  <!-- ============================================================= -->

  <target name="clean"
          description="Remove compiled files - does not affect installation">
    <delete dir="${basedir}/build" />
  </target>


  <!-- ============================================================= -->
  <!-- Create public API javadoc                                     -->
  <!-- ============================================================= -->
	
  <!-- FIXME: In ant versions <1.5, this will build the API of all subpackages
    -  of DSpace.  When we move to 1.5, we will be able to build the
    -  public API properly, using just the top-level package classes. -->

  <target name="public_api"
          description="Create the DSpace public API documentation with javadoc">
    <mkdir dir="${basedir}/build/public-api" />
    <javadoc packagenames="org.dspace.*"
             sourcepath="${basedir}/src"
             destdir="${basedir}/build/public-api"
             author="true"
             version="true"
             access="public"
             doctitle="DSpace Public API"
             windowtitle="DSpace Public API"
             bottom="Copyright &#169; 2002 MIT and Hewlett-Packard. All Rights Reserved."
             classpathref="build.class.path" />
  </target>



  <!-- ============================================================= -->
  <!-- Regression tests                                              -->
  <!-- ============================================================= -->

  <!-- By convention, tests should be in a "test" package (e.g.
    -  org.dspace.content.test) and be in files ending with "Test.java",
    -  (e.g. ContentTest.java). -->

  <!-- First, we see if JUnit is on the CLASSPATH.  If it is, we run the tests
    - directly.  If not, we re-run ant with CLASSPATH. set appropriately -->
  <target name="test"
          description="Run JUnit regression tests">
    <property name="second_test_target" value="test_rerun_ant" />
    <available classname="junit.framework.TestCase"
               property="second_test_target"
               value="run_tests" />
    <antcall target="${second_test_target}" />
  </target>

  <!-- Run the tests - junit.jar must be in CLASSPATH -->
  <target name="run_tests">
    <mkdir dir="${basedir}/build/test-reports"/>
    <junit printsummary="yes" haltonfailure="no">
      <classpath refid="build.class.path"/>
      <sysproperty key="log4j.configuration" value="file:${basedir}/etc/log4j.build.properties"/>
      <sysproperty key="dspace.configuration" value="${config}"/>
      <formatter type="plain"/>
      <batchtest fork="yes" todir="${basedir}/build/test-reports">
        <fileset dir="${basedir}/src">
          <include name="**/test/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!-- Launch a new ant process with junit.jar in the CLASSPATH -->
  <target name="test_rerun_ant">
    <exec dir="${basedir}"
          executable="ant">
          <env key="CLASSPATH" path="${basedir}/lib/junit.jar"/>
          <arg value="run_tests"/>
    </exec>
  </target>


</project>
